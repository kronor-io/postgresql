name: Publish PPA

on:
  workflow_dispatch:

jobs:
  publish-ppa:
    runs-on: ubuntu-latest
    steps:
      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg git dpkg-dev apt-utils gzip git

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ppa
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.

      - name: Import GPG key
        env:
          PPA_PRIVATE_KEY: ${{ secrets.PPA_PRIVATE_KEY }}
          PPA_PASSWORD: ${{ secrets.PPA_PASSWORD }}
        run: |
          echo "$PPA_PRIVATE_KEY" | gpg --batch --import

      - name: Create repository files
        env:
          PPA_EMAIL: ${{ secrets.PPA_EMAIL }}
        run: |
          # Generate Packages file
          dpkg-scanpackages --multiversion . > Packages
          gzip -k -f Packages
          
          # Generate Release file
          apt-ftparchive release . > Release
          
          # Sign Release file
          gpg --batch --pinentry-mode loopback --passphrase "${{ secrets.PPA_PASSWORD }}" --default-key "$PPA_EMAIL" -abs -o - Release > Release.gpg
          
          # Create InRelease file (clearsigned Release)
          gpg --batch --pinentry-mode loopback --passphrase "${{ secrets.PPA_PASSWORD }}" --default-key "$PPA_EMAIL" --clearsign -o - Release > InRelease

      - name: Commit files
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          git commit -a -m "Update PPA"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ppa